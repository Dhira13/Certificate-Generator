{"ast":null,"code":"var _jsxFileName = \"/home/dheeraj/Nginx/frontend/Certificate-Generator/src/components/midSection/midSection.js\";\nimport React, { Component } from 'react';\nimport Swal from 'sweetalert2'; // import html2canvas from \"html2canvas\"\n// import { jsPDF } from \"jspdf\"\n//npm install --save html2canvas\n// import {NavLink} from 'react-router-dom'\n\nimport CertSelect from \"../Certselect/CertSelect\";\nimport \"./midSection.css\"; // var ind =0;\n\nclass midSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      }); // console.log(e.target.value.lastIndexOf(\"\"))\n    };\n\n    this.handleSubmitClick = e => {\n      //  let val = document.getElementByClassName(\"mid__sec\");\n      //  console.log(val);\n      const {\n        name,\n        body,\n        date,\n        sbody1,\n        sbody2\n      } = this.state;\n\n      if (name === \"\" || date === \"\" || body === \"\" || sbody1 === \"\" || sbody2 === \"\") {\n        Swal.fire('Fill all fields', 'error'); //\n      } else {\n        Swal.fire('Good job!', 'success');\n        let k = document.getElementById(\"mid__sec\");\n        console.log(k);\n        k.style.display = \"none\";\n        let t = document.getElementById(\"dis__certSelect\");\n        t.style.display = \"block\";\n      } //   alert(\"hello\");\n      //  document.getElementByClassName\n\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      name: \"\",\n      // link:\"\",\n      date: \"\",\n      body: \"\",\n      //   file1:\"\",\n      //   file2:\"\",\n      sbody1: \"\",\n      sbody2: \"\"\n    };\n  } // printDocument=(e)=>{\n  //   const input = document.getElementById('divToPrint');\n  //   html2canvas(input)\n  //     .then((canvas) => {\n  //       const imgData = canvas.toDataURL('image/png');\n  //       const pdf = new jsPDF();\n  //       pdf.addImage(imgData, 'JPEG', 0, 0);\n  //       // pdf.output('dataurlnewwindow');\n  //       pdf.save(\"download.pdf\");\n  //     })\n  //   ;\n  // }\n\n\n  render() {\n    const {\n      name,\n      body,\n      date,\n      sbody1,\n      sbody2\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mid__sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Fill fields accordingly\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./Images/certificate-1.jpg\",\n      alt: \"certificate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    })), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Enter name\",\n      value: name,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 149\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"date\",\n      value: date,\n      placeholder: \"Enter date\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 148\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"sbody1\",\n      value: sbody1,\n      placeholder: \"Signatory body 1\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 157\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"sbody2\",\n      value: sbody2,\n      placeholder: \"Signatory body 2\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 157\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"body\",\n      placeholder: \"Enter body you want\",\n      rows: \"7\",\n      cols: \"58\",\n      value: body,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleSubmitClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Select Template\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"json__link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Enter json link\",\n      type: \"text\",\n      name: \"link\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dis__certSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CertSelect, {\n      name: name,\n      body: body,\n      date: date,\n      sbody1: sbody1,\n      sbody2: sbody2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default midSection;","map":{"version":3,"sources":["/home/dheeraj/Nginx/frontend/Certificate-Generator/src/components/midSection/midSection.js"],"names":["React","Component","Swal","CertSelect","midSection","constructor","props","handleChange","e","setState","target","name","value","handleSubmitClick","body","date","sbody1","sbody2","state","fire","k","document","getElementById","console","log","style","display","t","submitHandler","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Swal from 'sweetalert2'\r\n// import html2canvas from \"html2canvas\"\r\n// import { jsPDF } from \"jspdf\"\r\n//npm install --save html2canvas\r\n\r\n\r\n\r\n// import {NavLink} from 'react-router-dom'\r\nimport CertSelect from \"../Certselect/CertSelect\"\r\nimport \"./midSection.css\"    \r\n// var ind =0;\r\n class midSection extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n     \r\n         this.state = {\r\n              name:\"\",\r\n             // link:\"\",\r\n              date:\"\",\r\n              body:\"\",\r\n            //   file1:\"\",\r\n            //   file2:\"\",\r\n              sbody1:\"\",\r\n              sbody2:\"\"\r\n         }\r\n   }\r\n   \r\n  // printDocument=(e)=>{\r\n  //   const input = document.getElementById('divToPrint');\r\n  //   html2canvas(input)\r\n  //     .then((canvas) => {\r\n  //       const imgData = canvas.toDataURL('image/png');\r\n  //       const pdf = new jsPDF();\r\n  //       pdf.addImage(imgData, 'JPEG', 0, 0);\r\n  //       // pdf.output('dataurlnewwindow');\r\n  //       pdf.save(\"download.pdf\");\r\n  //     })\r\n  //   ;\r\n  // }\r\n\r\n\r\n\r\n\r\n     handleChange =(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n       // console.log(e.target.value.lastIndexOf(\"\"))\r\n\r\n     }\r\n     handleSubmitClick=(e)=>{\r\n        //  let val = document.getElementByClassName(\"mid__sec\");\r\n        //  console.log(val);\r\n       const {name,body,date,sbody1,sbody2} = this.state;\r\n      \r\n       if(name===\"\"||date===\"\"||body===\"\"||sbody1===\"\"||sbody2===\"\")\r\n       {\r\n        Swal.fire(\r\n            'Fill all fields',\r\n            'error'\r\n          )\r\n           //\r\n       }\r\n       else\r\n       {\r\n        Swal.fire(\r\n            'Good job!',\r\n            'success'\r\n        )\r\n        let k = document.getElementById(\"mid__sec\");\r\n        console.log(k);\r\n        k.style.display=\"none\";\r\n        let t = document.getElementById(\"dis__certSelect\");\r\n        t.style.display=\"block\";\r\n       }\r\n      //   alert(\"hello\");\r\n        //  document.getElementByClassName\r\n\r\n     }\r\n \r\n    //  handlefileChange=(e)=>{\r\n    //      this.setState({[e.target.name]:e.target.files[ind].name})\r\n    //      ind++;\r\n    //        // file2:e.target.files[1].name})\r\n    //      console.log(this.state.file1)\r\n    //  }\r\n    //  handlefile1Change=(e)=>{\r\n    //     this.setState({\r\n    //        //  files[0]:e.target.files[0].name,\r\n    //        //  files[1]:e.target.files[1].name\r\n    //        file2:e.target.files[1].name,\r\n    //       // file2:e.target.files[1].name\r\n    //     })\r\n       \r\n    // }\r\n\r\n     submitHandler=(e)=>{\r\n         e.preventDefault();\r\n     }\r\n    render() {\r\n        const {name,body,date,sbody1,sbody2} = this.state;\r\n        return (\r\n            <div> \r\n            {/* <div className=\"mb5\">\r\n            <button onClick={this.printDocument}>Print</button>\r\n          </div>\r\n            <div id='divToPrint'> */}\r\n            <div id=\"mid__sec\">\r\n            <div>\r\n            <h1>Fill fields accordingly</h1>\r\n            <img src=\"./Images/certificate-1.jpg\" alt=\"certificate\"></img>\r\n           </div> <div className=\"form__section\">\r\n            <form onSubmit={this.submitHandler}>\r\n            <input type=\"text\"  name =\"name\" placeholder=\"Enter name\" value={name} onChange={this.handleChange} autoComplete=\"off\" required></input><br />\r\n            <input type=\"text\" name=\"date\" value ={date} placeholder=\"Enter date\" onChange={this.handleChange} autoComplete=\"off\" required></input><br />\r\n            <input type=\"text\" name=\"sbody1\" value={sbody1} placeholder=\"Signatory body 1\" onChange={this.handleChange} autoComplete=\"off\" required></input><br />\r\n            <input type=\"text\" name=\"sbody2\" value={sbody2} placeholder=\"Signatory body 2\" onChange={this.handleChange} autoComplete=\"off\" required></input><br />\r\n            <br />\r\n            {/* <label for=\"file1\">Signature of Signatory body 1</label><br />\r\n            <input type=\"file\" className=\"file\" name=\"file1\" value ={file1} onChange={this.handlefileChange}></input><br />\r\n            <img src={file1} alt={file1}></img>\r\n            {/* <h1>{file1}0</h1> */}\r\n            {/* <label for=\"file1\">Signature of Signatory body 1</label><br />\r\n            <input type=\"file\" className=\"file\" name=\"file2\" value ={file2} onChange={this.handlefileChange}></input><br /> */} \r\n            <textarea name=\"body\" placeholder=\"Enter body you want\" rows=\"7\" cols=\"58\" value={body}  onChange={this.handleChange} autoComplete=\"off\" required></textarea>\r\n            {/* <NavLink to=\"/CertSelect\"> */}\r\n            <button type=\"submit\" onClick={this.handleSubmitClick}>Select Template</button>\r\n            {/* </NavLink> */}\r\n            </form>\r\n            <div className=\"json__link\">\r\n            <h1>OR</h1>\r\n            <input placeholder=\"Enter json link\" type=\"text\" name=\"link\" onChange={this.handleChange}></input>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div id=\"dis__certSelect\">\r\n            <CertSelect name ={name}  body={body} date={date} sbody1={sbody1} sbody2 = {sbody2} />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default midSection\r\n"]},"metadata":{},"sourceType":"module"}